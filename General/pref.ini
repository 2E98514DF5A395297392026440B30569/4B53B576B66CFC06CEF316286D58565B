[common]
;API mode, 设置为 true 以防止加载本地订阅或直接提供本地文件
api_mode=true

;用于通过 Web 界面执行关键操作的访问令牌
api_access_token=sub-narutos-top

;Default URLs, 当请求中没有提供 URL 时使用，使用“|” 分隔多个订阅链接，支持本地文件/URL
;default_url=ss|vmess        
default_url=

;插入订阅链接到请求。 可用于将节点添加到所有导出的订阅。
enable_insert=true
;要插入订阅链接的 URL，使用“|” 分隔多个订阅链接，支持本地文件/URL
insert_url=
;将插入的 URL 添加到订阅链接中。 insert_url 中的节点将首先添加到具有非组特定匹配模式的组中。
prepend_insert_url=true
;排除备注符合以下模式的节点。 支持正则表达式。
exclude_remarks=(到期|剩余流量|时间|官网|产品|平台)
;exclude_remarks=(other rule)

;仅包含备注符合以下模式的节点。 支持正则表达式。
;include_remarks=V3.*港

;为过滤节点启用脚本支持
enable_filter=false
;用于过滤节点的脚本。 支持内联脚本和脚本路径。 应在脚本中定义带有 1 个参数的“过滤器”函数，该参数是一个节点。
;Example: Inline script: Set value to content of script. Replace all line break with "\n".
;         Script path: Set value to "path:/path/to/script.js".
;filter_script=function filter(node) {\n    const info = JSON.parse(node.ProxyInfo);\n    if(info.EncryptMethod.includes('chacha20'))\n        return true;\n    return false;\n}

;未指定时默认设置外部配置文件，支持本地文件/URL
;default_external_config=config/example_external_config.ini

;外部配置中“rule_base”选项的文件范围限制。
base_path=base

;生成器使用的clash配置库，支持本地文件/URL
clash_rule_base=template/GeneralClashConfig.yml
;clash_rule_base=simple_base.yml
;这个不是直接启用 需要你手工替换掉clash运行目录里config.yml中内容的，但是这个会跟应用拦截冲突
;clash_rule_base=rules/ACL4SSR/Clash/GeneralClashConfig.yml                                                                                                                                  

;生成器使用的 Surge 配置库，支持本地文件/URL
;surge_rule_base=surge.conf
surge_rule_base=base/all_base.tpl

;生成器使用的Surfboard配置库，支持本地文件/URL
;surfboard_rule_base=surfboard.conf
surfboard_rule_base=base/all_base.tpl

;生成器使用的 Mellow 配置库，支持本地文件/URL
;mellow_rule_base=mellow.conf
mellow_rule_base=base/all_base.tpl

;生成器使用的 Quantumult 配置库，支持本地文件/URL
quan_rule_base=base/all_base.tpl

;生成器使用的 Quantumult X 配置库，支持本地文件/URL
quanx_rule_base=base/all_base.tpl

;生成器使用的 Loon 配置库，支持本地文件/URL
loon_rule_base=base/all_base.tpl

;生成器使用的 Shadowsocks Android 配置库，支持本地文件/URL
sssub_rule_base=base/all_base.tpl

;用于下载配置、规则集或订阅的代理，设置为 NONE 或为空以禁用它，设置为 SYSTEM 使用系统代理。
;接受 cURL 支持的代理 (http:// https:// socks4a:// socks5://)
;Additional support for CORS proxy ( https://github.com/Rob--W/cors-anywhere https://github.com/Zibri/cloudflare-cors-anywhere etc.), prefix the address with "cors:" to recognize the address as CORS proxy.
;Example:  http://127.0.0.1:80  socks5://example.com:1080  cors:https://cors-anywhere.herokuapp.com/
proxy_config=SYSTEM
proxy_ruleset=SYSTEM
proxy_subscription=NONE

;Append a proxy type string ([SS] [SSR] [VMess]) to node remark.
append_proxy_type=false

[userinfo]
;从节点中提取流数据的规则
;Format: full_match_regex|new_format_regex
;where new_format_regex should be like "total=$1&left=$2&used=$3"
stream_rule=^剩余流量：(.*?)\|总流量：(.*)$|total=$2&left=$1
stream_rule=^剩余流量：(.*?) (.*)$|total=$1&left=$2
stream_rule=^Bandwidth: (.*?)/(.*)$|used=$1&total=$2
stream_rule=^\[.*?\]剩余(.*?)@(?:.*)$|total=$1
stream_rule=^.*?流量:(.*?) 剩:(?:.*)$|total=$1

;从节点中提取过期时间数据的规则
;Format: full_match_regex|new_format_regex
;where new_format_regex should follow this example: yyyy:mm:dd:hh:mm:ss
time_rule=^过期时间：(\d+)-(\d+)-(\d+) (\d+):(\d+):(\d+)$|$1:$2:$3:$4:$5:$6
time_rule=^到期时间(:|：)(\d+)-(\d+)-(\d+)$|$1:$2:$3:0:0:0
time_rule=^Smart Access expire: (\d+)/(\d+)/(\d+)$|$1:$2:$3:0:0:0
time_rule=^.*?流量:(?:.*?) 剩:(.*)$|left=$1d

[node_pref]
;udp_flag=false
;tcp_fast_open_flag=false
;skip_cert_verify_flag=false
;tls13_flag=false

sort_flag=false
skip_cert_verify_flag=false
;用于排序节点的脚本。 应在脚本中定义带有 2 个参数的“比较”函数，这些参数是要比较的 2 个节点。 支持内联脚本和脚本路径。
;示例可以在 [common] 部分的 filter_script 选项中看到。
;sort_script=function compare(node_a, node_b) {\n    const info_a = JSON.parse(node_a.ProxyInfo);\n    const info_b = JSON.parse(node_b.ProxyInfo);\n    return info_a.Remark > info_b.Remark;\n}

filter_deprecated_nodes=false
append_sub_userinfo=true
clash_use_new_field_name=true

;生成 Clash 订阅的代理部分的样式。
;Supported styles: block, flow, compact
;Block: - name: name1    Flow: - {name: name1, key: value}    Compact: [{name: name1, key: value},{name: name2, key: value}]
;         key: value           - {name: name2, key: value}
;       - name: name2
;         key: value
clash_proxies_style=flow

;使用以下模式重命名备注。 支持正则表达式。
;Format: Search_Pattern@Replace_Pattern
;rename_node=IPLC@专线
;rename_node=RELAY@中转
;rename_node=BGP-@
;rename_node=!!script:function rename(node) {\n  const info = JSON.parse(node.ProxyInfo);\n  const geoinfo = JSON.parse(geoip(info.Hostname));\n  if(geoinfo.country_code == "CN")\n    return "CN " + node.Remark;\n}
;rename_node=!!script:path:/path/to/script.js
; short names
; rename_node=中国@中
; rename_node=徐州@徐
; rename_node=深圳@深
; rename_node=上海@沪
; rename_node=广州@穗
; rename_node=宁波@甬
; rename_node=贵阳@筑
; rename_node=武汉@汉
; rename_node=南京@宁
; rename_node=天津@津
; rename_node=北京@京
; rename_node=沈阳@沈
; rename_node=江苏@苏
; rename_node=浙江@浙
; rename_node=安徽@皖
; rename_node=福建@闽
; rename_node=湖南@湘
; rename_node=广东@粤
; rename_node=海南@琼
; rename_node=四川@川
; rename_node=贵州@贵
; rename_node=云南@云
; rename_node=青海@青
; rename_node=台湾@台
; rename_node=香港@港
; rename_node=澳门@澳
; rename_node=美国@美
; rename_node=英国@英
; rename_node=加拿大@加
; rename_node=法国@法
; rename_node=德国@德
; rename_node=瑞士@瑞
; rename_node=日本@日
; rename_node=韩国@韩
; rename_node=芬兰@芬
; rename_node=印度@印
; rename_node=泰国@泰
; rename_node=越南@越
; rename_node=新加坡@新
; rename_node=意大利@意
; rename_node=菲律宾@菲
; rename_node=俄罗斯@俄
; rename_node=土耳其@土                        
; times RE
;rename_node=\(?((x|X)?(\d+)(\.?\d+)?)((\s?倍率?)|(x|X))\)?@-$1x
;rename_node=\s*\-+\s*@-
rename_node=!!import:snippets/rename_node.txt

[managed_config]
;将“#!MANAGED-CONFIG”信息附加到 Surge 配置
write_managed_config=true

;MANAGED-CONFIG 信息的地址前缀，没有尾随的“/”。
;该地址还将用于生成 /getruleset、/qx-rewrite、/qx-script 地址。
managed_config_prefix=http://127.0.0.1:25500

;以秒为单位的托管配置更新间隔，确定配置什么时候更新。
config_update_interval=86400

;如果 config_update_strict 设置为 true，Surge 将在间隔后要求强制更新。
config_update_strict=false

;要写入的设备 ID 以重写某些版本的 Quantumult X 的脚本
quanx_device_id=

[surge_external_proxy]
;surge_ssr_path=/usr/bin/ssr-local
resolve_hostname=true

[emojis]
add_emoji=true
remove_old_emoji=true

;添加表情符号的规则。 支持正则表达式。
;Format: Remark_Search_Pattern,emoji

rule=(流量|时间|应急|过期|Bandwidth|expire),🏳️‍🌈
;rule=!!script:function getEmoji(node) {\n  const info = JSON.parse(node.ProxyInfo);\n  const geoinfo = JSON.parse(geoip(info.Hostname));\n  if(geoinfo.country_code == "CN")\n    return "��️‍��";\n}
;rule=!!script:path:/path/to/script/.js
rule=AC,🇦🇨
rule=(AR|阿根廷),🇦🇷
rule=(奥地利|维也纳),🇦🇹
rule=(AU|Australia|Sydney|澳大利亚|悉尼),🇦🇺
rule=BE,🇧🇪
rule=(BR|Brazil|巴西|圣保罗),🇧🇷
rule=(Canada|加拿大|蒙特利尔|温哥华|楓葉|枫叶),🇨🇦
rule=(瑞士|苏黎世),🇨🇭
rule=(DE|Germany|德国|法兰克福|德),🇩🇪
rule=丹麦,🇩🇰
rule=ES,🇪🇸
rule=EU,🇪🇺
rule=(Finland|芬兰|赫尔辛基),🇫🇮
rule=(FR|France|法国|巴黎),🇫🇷
rule=(UK|England|UnitedKingdom|英国|英|伦敦),🇬🇧
rule=(HK|HongKong|香港|深港|沪港|呼港|HKT|HKBN|HGC|WTT|CMI|穗港|京港|港),🇭🇰
rule=(Indonesia|印尼|印度尼西亚|雅加达),🇮🇩
rule=(Ireland|爱尔兰|都柏林),🇮🇪
rule=(India|印度|孟买),🇮🇳
rule=(Italy|意大利|米兰),🇮🇹
rule=(JP|Japan|日本|东京|大阪|埼玉|沪日|穗日|川日|中日|泉日|杭日),🇯🇵
rule=(KP|朝鲜),🇰🇵
rule=(KR|Korea|KOR|韩国|首尔|韩|韓),🇰🇷
rule=(MO|Macao|澳门|CTM),🇲🇴
rule=(MY|Malaysia|马来西亚),🇲🇾
rule=(NL|Netherlands|荷兰|阿姆斯特丹),🇳🇱
rule=(PH|Philippines|菲律宾),🇵🇭
rule=(RO|罗马尼亚),🇷🇴
rule=(RU|Russia|俄罗斯|伯力|莫斯科|圣彼得堡|西伯利亚|新西伯利亚|京俄|杭俄),🇷🇺
rule=(沙特|迪拜),🇸🇦
rule=(SE|Sweden),🇸🇪
rule=(SG|Singapore|新加坡|狮城|沪新|京新|泉新|穗新|深新|杭新),🇸🇬
rule=(TH|Thailand|泰国|曼谷),🇹🇭
rule=(TR|Turkey|土耳其|伊斯坦布尔),🇹🇷
rule=(US|America|UnitedStates|美国|美|京美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|沪美),🇺🇲
rule=(VN|越南),🇻🇳
rule=(ZA|南非),🇿🇦
rule=(CN|China|回国|中国|江苏|北京|上海|广州|深圳|杭州|常州|徐州|青岛|宁波|镇江|back|TW|Taiwan|台湾|台北|台中|新北|彰化|CHT|新北|台|HINET),🇨🇳
rule=!!import:snippets/emoji.txt

[rulesets]
;启用使用规则集生成规则
enabled=true

;覆盖 rule_base 中的现有规则
overwrite_original_rules=false

;根据要求执行规则集更新
update_ruleset_on_request=false

;规则集地址，支持本地文件/URL
;Format: Group name,[type:]URL[,interval]
;        Group name,[]Rule
;其中“type”支持以下值：surge、quanx、clash-domain、clash-ipcidr、clash-classic
;如果省略，类型默认为surge
;surge_ruleset=DIRECT,https://raw.githubusercontent.com/ConnersHua/Profiles/master/Surge/Ruleset/Unbreak.list
;surge_ruleset=⛔️ 广告拦截,https://raw.githubusercontent.com/ConnersHua/Profiles/master/Surge/Ruleset/Advertising.list
;surge_ruleset=🚫 运营劫持,https://raw.githubusercontent.com/ConnersHua/Profiles/master/Surge/Ruleset/Hijacking.list
;surge_ruleset=🌌 YouTube,https://raw.githubusercontent.com/ConnersHua/Profiles/master/Surge/Ruleset/Media/YouTube.list
;surge_ruleset=🎥 NETFLIX,https://raw.githubusercontent.com/ConnersHua/Profiles/master/Surge/Ruleset/Media/Netflix.list
;surge_ruleset=HBO,https://raw.githubusercontent.com/ConnersHua/Profiles/master/Surge/Ruleset/Media/HBO.list
;surge_ruleset=Fox,https://raw.githubusercontent.com/ConnersHua/Profiles/master/Surge/Ruleset/Media/Fox.list
;surge_ruleset=🌍 国外媒体,https://raw.githubusercontent.com/ConnersHua/Profiles/master/Surge/Ruleset/GlobalMedia.list
;surge_ruleset=🌏 港台媒体,https://raw.githubusercontent.com/ConnersHua/Profiles/master/Surge/Ruleset/HKMTMedia.list
;surge_ruleset=📲 电报信息,https://raw.githubusercontent.com/ConnersHua/Profiles/master/Surge/Ruleset/Telegram.list
;surge_ruleset=🚀 节点选择,https://raw.githubusercontent.com/ConnersHua/Profiles/master/Surge/Ruleset/Global.list
;surge_ruleset=🍎 苹果服务,https://raw.githubusercontent.com/ConnersHua/Profiles/master/Surge/Ruleset/Apple.list
;surge_ruleset=DIRECT,https://raw.githubusercontent.com/ConnersHua/Profiles/master/Surge/Ruleset/China.list

;surge_ruleset=🎯 全球直连,rules/LocalAreaNetwork.list
surge_ruleset=🎯 全球直连,rules/ACL4SSR/Clash/LocalAreaNetwork.list
; 普通广告拦截，只包含广告联盟，推荐加上，不影响使用
surge_ruleset=🛑 全球拦截,rules/ACL4SSR/Clash/BanAD.list
; 应用广告拦截 不推荐加入 可能会产生副作用
surge_ruleset=⛔ 应用拦截,rules/ACL4SSR/Clash/BanProgramAD.list
;surge_ruleset=🛑 全球拦截,rules/NobyDa/Surge/AdRule.list
;surge_ruleset=🛑 全球拦截,rules/ConnersHua/Surge/Ruleset/Hijacking.list
surge_ruleset=🎯 全球直连,rules/ACL4SSR/Clash/ChinaDomain.list
;surge_ruleset=🎯 全球直连,rules/ACL4SSR/Clash/Apple.list
;surge_ruleset=🎯 全球直连,rules/ConnersHua/Surge/Ruleset/Unbreak.list
;surge_ruleset=🎯 全球直连,rules/ConnersHua/Surge/Ruleset/China.list
;surge_ruleset=🎯 全球直连,rules/NobyDa/Surge/Download.list
;surge_ruleset=🎥 NETFLIX,rules/ConnersHua/Surge/Ruleset/Media/Netflix.list
surge_ruleset=🌍 国外媒体,rules/ConnersHua/Surge/Ruleset/GlobalMedia.list
;surge_ruleset=🌏 国内媒体,rules/lhie1/Surge3/AsianTV.list
surge_ruleset=📲 电报信息,rules/ConnersHua/Surge/Ruleset/Telegram.list
;surge_ruleset=🚀 节点选择,rules/ConnersHua/Surge/Ruleset/Global.list
;surge_ruleset=🚀 节点选择,rules/ACL4SSR/Clash/ProxyGFWlist.list
surge_ruleset=🚀 节点选择,rules/ACL4SSR/Clash/ProxyLite.list
surge_ruleset=🍎 苹果服务,rules/ACL4SSR/Clash/Apple.list
;surge_ruleset=🍎 苹果服务,rules/ConnersHua/Surge/Ruleset/Apple.list
;surge_ruleset=🎯 全球直连,rules/ConnersHua/Surge/Ruleset/China.list
;surge_ruleset=🎯 全球直连,rules/NobyDa/Surge/Download.list
;surge_ruleset=🎯 全球直连,rules/ACL4SSR/Clash/ChinaIp.list
surge_ruleset=🎯 全球直连,rules/ACL4SSR/Clash/ChinaCompanyIp.list
surge_ruleset=🎯 全球直连,[]GEOIP,CN
surge_ruleset=🐟 漏网之鱼,[]FINAL

;ruleset=DIRECT,https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Guard/Unbreak.list,86400
;ruleset=�� 全球直连,rules/LocalAreaNetwork.list
;ruleset=DIRECT,surge:rules/LocalAreaNetwork.list
;ruleset=Advertising,quanx:https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/Guard/Advertising.list,86400
;ruleset=Domestic Services,clash-domain:https://ruleset.dev/clash_domestic_services_domains,86400
;ruleset=Domestic Services,clash-ipcidr:https://ruleset.dev/clash_domestic_services_ips,86400
;ruleset=DIRECT,clash-classic:https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/China.yaml,86400
;ruleset=�� 全球直连,[]GEOIP,CN
;ruleset=�� 漏网之鱼,[]FINAL

ruleset=!!import:snippets/rulesets.txt

[proxy_groups]
;使用以下模式生成clash代理组。节点过滤规则支持正则表达式。
;Format: Group_Name`select`Rule_1`Rule_2`...
;        Group_Name`url-test|fallback|load-balance`Rule_1`Rule_2`...`test_url`interval[,timeout][,tolerance]
;带有“[]”前缀的规则将被直接添加。

;custom_proxy_group=Proxy`select`.*`[]AUTO`[]DIRECT`.*
;custom_proxy_group=UrlTest`url-test`.*`http://www.gstatic.com/generate_204`300,5,100
;custom_proxy_group=FallBack`fallback`.*`http://www.gstatic.com/generate_204`300,5
;custom_proxy_group=LoadBalance`load-balance`.*`http://www.gstatic.com/generate_204`300,,100
;custom_proxy_group=SSID`ssid`default_group`celluar=group0,ssid1=group1,ssid2=group2

;custom_proxy_group=g1`select`!!GROUPID=0
;custom_proxy_group=g2`select`!!GROUPID=1
;custom_proxy_group=v2ray`select`!!GROUP=V2RayProvider

;custom_proxy_group=g1hk`select`!!GROUPID=0!!(HGC|HKBN|PCCW|HKT|hk|港)
;custom_proxy_group=sstw`select`!!GROUP=V2RayProvider!!(深台|彰化|新北|台|tw)
;custom_proxy_group=provider`select`!!PROVIDER=prov1,prov2,prov3`fallback_nodes

;还支持使用脚本过滤节点。 应在脚本中定义一个带有一个参数的“过滤器”函数，该参数是所有可用节点的数组。
;custom_proxy_group=script`select`script:/path/to/script.js

;for forcerule.yml
;custom_proxy_group=!!import:snippets/groups_forcerule.txt

;custom_proxy_group=Proxy`select`.*`[]AUTO`[]DIRECT`.*
;custom_proxy_group=AUTO`url-test`.*`http://www.gstatic.com/generate_204`300
;custom_proxy_group=google`select`.*
;custom_proxy_group=netflix`select`.*
;custom_proxy_group=动画疯`select`(深台|彰化|新北|台)
;custom_proxy_group=fox+`select`(HGC|HKBN|PCCW|HKT|深台|彰化|新北|台|新加坡|sg|hk|tw)
;custom_proxy_group=美区影视`select`(美|美国)
;custom_proxy_group=Global_media`select`.*
;custom_proxy_group=Domestic`select`[]DIRECT`[]Proxy
;custom_proxy_group=Apple`select`[]DIRECT`[]Proxy
;custom_proxy_group=Final`select`[]Proxy`[]DIRECT
;custom_proxy_group=屏蔽广告`select`[]REJECT`[]DIRECT
;custom_proxy_group=UnblockNeteaseMusic`select`云音乐解锁`[]DIRECT
;custom_proxy_group=Telegram`select`新加坡`[]Proxy
;for Surge rulesets
custom_proxy_group=!!import:snippets/groups.txt
custom_proxy_group=🚀 节点选择`select`[]♻️ 自动选择`[]🎯 全球直连`.*
custom_proxy_group=♻️ 自动选择`url-test`.*`http://www.gstatic.com/generate_204`300
;custom_proxy_group=🔯 故障转移`fallback`.*`http://www.gstatic.com/generate_204`300
;custom_proxy_group=🍀 负载均衡`load-balance`.*`http://www.gstatic.com/generate_204`300
;custom_proxy_group=🎥 NETFLIX`select`[]🚀 节点选择`[]♻️ 自动选择`[]🎯 全球直连`.*
;custom_proxy_group=⛔️ 广告拦截`select`[]🛑 全球拦截`[]🎯 全球直连`[]🚀 节点选择
;custom_proxy_group=🚫 运营劫持`select`[]🛑 全球拦截`[]🎯 全球直连`[]🚀 节点选择
custom_proxy_group=🌍 国外媒体`select`[]🚀 节点选择`[]♻️ 自动选择`[]🎯 全球直连`.*
;custom_proxy_group=🌏 国内媒体`select`[]🎯 全球直连`(HGC|HKBN|PCCW|HKT|深台|彰化|新北|台|hk|港|tw)`[]🚀 节点选择
custom_proxy_group=📲 电报信息`select`[]🚀 节点选择`.*`[]🎯 全球直连
custom_proxy_group=🍎 苹果服务`select`[]🎯 全球直连`[]🚀 节点选择`[]♻️ 自动选择`.*
custom_proxy_group=🎯 全球直连`select`[]DIRECT
custom_proxy_group=🛑 全球拦截`select`[]REJECT`[]DIRECT
custom_proxy_group=⛔ 应用拦截`select`[]REJECT`[]DIRECT
custom_proxy_group=🐟 漏网之鱼`select`[]🚀 节点选择`[]♻️ 自动选择`[]🎯 全球直连`.*
    

[template]
;模板内“include”语句的文件范围限制。
template_path=

;以下设置将添加到模板变量的“全局”范围
;可以使用模板中的“global.clash.http_port”访问“clash.http_port”的值。
clash.http_port=7890
clash.socks_port=7891
clash.allow_lan=true
clash.log_level=info

[aliases]
;访问接口的别名。 可用于缩短 URI。
;访问别名时传递的所有参数都将附加到别名目标的参数。
;Format: uri=target
/v=/version
/clash=/sub?target=clash
/clashr=/sub?target=clashr
/surge=/sub?target=surge
/quan=/sub?target=quan
/quanx=/sub?target=quanx
/mellow=/sub?target=mellow
/surfboard=/sub?target=surfboard
/loon=/sub?target=loon
/ss=/sub?target=ss
/ssd=/sub?target=ssd
/sssub=/sub?target=sssub
/ssr=/sub?target=ssr
/v2ray=/sub?target=v2ray
/trojan=/sub?target=trojan

[tasks]
;在服务器执行期间定期运行的任务。
;Format: Name`Cron_Expression`JS_Path`Timeout_in_seconds
;task=tick`0/10 * * * * ?`tick.js`3

[server]
;为 Web 服务器绑定的地址
listen=0.0.0.0

;Web 服务器绑定的端口
port=25500

;Web 服务器的根文件夹，保留为空以禁用
serve_file_root=

[advanced]
log_level=info
print_debug_info=false
;最大挂起连接数
max_pending_connections=10240
;最大并发线程数
max_concurrent_threads=4
max_allowed_rulesets=0
max_allowed_rules=0
max_allowed_download_size=0
enable_cache=false
cache_subscription=60
cache_config=300
cache_ruleset=21600
script_clean_context=true
async_fetch_ruleset=false
skip_failed_links=false
