#---------------------------------------------------#
# 来源 https://github.com/ACL4SSR/ACL4SSR/blob/master/Clash/GeneralClashConfig.yml
# 配置文件需要放置在 $HOME/.config/clash/config.yml
# 或者运行目录下的config.yml
# 参考：https://wiki.metacubex.one/config/general/#_2

#------------------------------------全局配置------------------------------------#
# 允许其他设备经过 Clash 的代理端口访问互联网，可选值 true/false
allow-lan: false

# 绑定地址，仅允许其他设备通过这个地址访问
# "*" 绑定所有 IP 地址
# 192.168.31.31 绑定单个 IPV4 地址
# [aaaa::a8aa:ff:fe09:57d8] 绑定单个 IPV6 地址
bind-address: "*"

# 允许连接的 IP 地址段，仅作用于 allow-lan 为 true 默认值为 0.0.0.0/0和 ::/0
lan-allowed-ips: 
  - 0.0.0.0/0
  - ::/0

#lan-disallowed-ips: # 禁止连接的 IP 地址段，黑名单优先级高于白名单，默认值为空
  #- 192.168.0.3/32

#authentication: # http(s)/socks/mixed代理的用户验证
  #- "user1:pass1"
  #- "user2:pass2"

#skip-auth-prefixes: # 设置允许跳过验证的 IP 段
  #- 127.0.0.1/8
  #- ::1/128

mode: rule # 此项拥有默认值，默认为规则模式


# Clash 内核输出日志的等级，仅在控制台和控制页面输出
# silent 静默，不输出
# error 仅输出发生错误至无法使用的日志
# warning 输出发生错误但不影响运行的日志，以及 error 级别内容
# info 输出一般运行的内容，以及 error 和 warning 级别的日志
# debug 尽可能的输出运行中所有的信息
log-level: info 

# # 是否允许内核接受 IPv6 流量
ipv6: true

# 控制 Clash 发出 TCP Keep Alive 包的间隔，减少移动设备耗电问题的临时措施。单位为秒
keep-alive-interval: 30

# 控制是否让 Clash 去匹配进程
# always 开启，强制匹配所有进程
# strict 默认，由 Clash 判断是否开启
# off 不匹配进程，推荐在路由器上使用此模式
find-process-mode: strict

# 外部控制器，可以使用 RESTful API 来控制你的 Clash 内核
# API 监听地址，你可以将 127.0.0.1 修改为 0.0.0.0 来监听所有 IP
external-controller: 127.0.0.1:9090

# Unix socket API 监听地址
#external-controller-unix: mihomo.sock

# HTTPS-API 监听地址，需要配置 tls 部分证书和其私钥配置，使用 TLS 也必须填写 external-controller
#external-controller-tls: 127.0.0.1:9443

# 在 RESTful API 端口上开启 DOH 服务器
#external-doh-server: /dns-query

# API 的访问密钥
#secret: ""

# 外部用户界面
# 可以将静态网页资源 (比如 Clash-dashboard) 运行在 Clash API, 路径为 API 地址/ui
# 可以为绝对路径，或者 Clash 工作目录的相对路径
#external-ui: /path/to/ui/folder

# 自定义外部用户界面名字
# 非必须，更新时会更新到指定文件夹，不配置则直接更新到 external-ui 目录
#external-ui-name: xd      #  合并为 external-ui/xd

# 自定义外部用户界面下载地址
#external-ui-url: "https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip" #从 GitHub Pages 分支获取

# 缓存
profile:
  store-selected: true
  # 储存 API 对策略组的选择，以供下次启动时使用
  store-fake-ip: true
  # 储存 fakeip 映射表，域名再次发生连接时，使用原有映射地址

# 统一延迟
# 开启统一延迟时，会计算 RTT，以消除连接握手等带来的不同类型节点的延迟差异
# 可选值 true/false
unified-delay: true

# TCP 并发
tcp-concurrent: true

# 出站接口，Clash 的流量出站接口
#interface-name: en0

# 路由标记，为 Linux 下的出站连接提供默认流量标记
#routing-mark: 6666

# TLS，目前仅用于 API 的 https
#tls:
  #certificate: string # 证书 PEM 格式，或者 证书的路径
  #private-key: string # 证书对应的私钥 PEM 格式，或者私钥路径

# 全局客户端指纹
# 全局 TLS 指纹，优先低于 proxy 内的 client-fingerprint。
# 目前支持开启 TLS 传输的 TCP/grpc/WS/HTTP , 支持协议有 VLESS,Vmess 和 trojan.
# 可选：chrome, firefox, safari, iOS, android, edge, 360, qq, random, 若选择 random, 则按 Cloudflare Radar 数据按概率生成一个现代浏览器指纹。
global-client-fingerprint: chrome

# GEOIP 数据模式
# 更改 geoip 使用文件，mmdb 或者 dat，可选 true/false,true为 dat，此项有默认值 false
geodata-mode: true

# GEO 文件加载模式
# standard：标准加载器
# memconservative：专为内存受限 (小内存) 设备优化的加载器 (默认值)
geodata-loader: memconservative

# 自动更新 GEO
geo-auto-update: true
geo-update-interval: 24 # 更新间隔，单位为小时

# 自定 GEO 下载地址
geox-url:
  geoip: "https://cdn.jsdelivr.net/gh/Loyalsoldier/geoip@release/geoip.dat"
  geosite: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geosite.dat"
  mmdb: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/country.mmdb"
  asn: "https://github.com/xishang0128/geoip/releases/download/latest/GeoLite2-ASN.mmdb"

# 自定全局 UA
# 自定义外部资源下载时使用的的 UA，默认为 clash.meta
global-ua: clash.meta

#------------------------------------全局配置结束------------------------------------#
#------------------------------------DNS--------------------------------------------#
dns:
  # 是否启用，如为 false，则使用系统 DNS 解析
  enable: true

  # DOH 优先使用 http/3
  prefer-h3: false

  # 是否回应配置中的 hosts，默认 true
  use-hosts: true

  # 是否查询系统 hosts，默认 true
  use-system-hosts: true

  # dns 连接遵守路由规则，需配置 proxy-server-nameserver
  respect-rules: false

  # DNS 服务监听，仅支持 udp
  listen: 0.0.0.0:1053

  # 是否解析 IPV6, 如为 false, 则回应 AAAA 的空解析
  ipv6: false

  # 默认 DNS, 用于解析 DNS 服务器 的域名
  # 必须为 IP, 可为加密 DNS
  default-nameserver:
    - 114.114.114.114
    - 223.5.5.5
    - 119.29.9.29

  # 可选值 fake-ip/redir-host，默认redir-host
  enhanced-mode: fake-ip

  # fakeip 下的 IP 段设置，tun 的默认 IPV4 地址 也使用此值作为参考
  fake-ip-range: 198.18.0.1/16

  # 可选 blacklist/whitelist，默认blacklist，whitelist 即只有匹配成功才返回 fake-ip
  fake-ip-filter-mode: blacklist

  # fakeip 过滤，以下地址不会下发 fakeip 映射用于连接
  fake-ip-filter:
    - '*.lan'
    # win10本地连接检测
    - +.msftconnecttest.com
    - +.msftncsi.com
    # tailscale
    - controlplane.tailscale.com
    - log.tailscale.io


  # 指定域名查询的解析服务器，可使用 geosite, 优先于 nameserver/fallback 查询
  # 键支持域名通配
  # 值支持字符串/数组
  #nameserver-policy:
    #'+.arpa': '10.0.0.1'
    #'rule-set:cn':
    #- https://doh.pub/dns-query
    #- https://dns.alidns.com/dns-query

  # 默认的域名解析服务器
  nameserver:
    - https://doh.pub/dns-query
    - https://dns.alidns.com/dns-query

    # 特殊配置的DNS
    #- 'https://dns.cloudflare.com/dns-query#h3=true' # 强制 HTTP/3
    #- 'https://dns.cloudflare.com/dns-query#skip-cert-verify=true' # doh 跳过证书验证
    #- 'https://8.8.8.8/dns-query#ecs=1.1.1.1/24' # 指定 dns 查询的 subnet 地址，仅支持 doh
    #- 'https://8.8.8.8/dns-query#ecs=1.1.1.1/24&ecs-override=true' # 强制覆盖 dns 查询的 subnet 地址，仅支持 doh

  # 后备域名解析服务器，一般情况下使用境外 DNS, 保证结果可信
  # 配置 fallback后默认启用 fallback-filter,geoip-code为 cn
  fallback:
    - tls://8.8.4.4
    - tls://1.1.1.1

  # 代理节点域名解析服务器，仅用于解析代理节点的域名
  proxy-server-nameserver:
    - https://doh.pub/dns-query

  # 后备域名解析服务器筛选，满足条件的将使用 fallback结果或只使用 fallback解析
  fallback-filter:

    # 是否启用 geoip 判断
    geoip: true

    # 可选值为 国家缩写，默认值为 CN
    # 除了 geoip-code 配置的国家 IP, 其他的 IP 结果会被视为污染
    # geoip-code 配置的国家的结果会直接采用，否则将采用 fallback结果
    geoip-code: CN

    # 可选值为对于的 geosite 内包含的集合
    # geosite 列表的内容被视为已污染，匹配到 geosite 的域名，将只使用 fallback解析，不去使用 nameserver
    #geosite:
      #- gfw

    # 书写内容为 IP/掩码
    # 这些网段的结果会被视为污染，nameserver解析出这些结果时将会采用 fallback的解析结果
    ipcidr:
      - 240.0.0.0/4

    # 这些域名被视为已污染，匹配到这些域名，会直接使用 fallback解析，不去使用 nameserver
    domain:
      - '+.google.com'
      - '+.facebook.com'
      - '+.youtube.com'
#------------------------------------DNS配置结束------------------------------------#
#------------------------------------hosts-----------------------------------------#
# 键支持域名通配
# 值支持字符串/数组，域名重定向不支持数组
# 完整的的域名优先级高于使用通配符的域名，例如：foo.example.com > *.example.com > .example.com
hosts:
  '*.clash.dev': 127.0.0.1
  'alpha.clash.dev': '::1'
#  test.com: [1.1.1.1, 2.2.2.2]
#  baidu.com: google.com
#------------------------------------hosts配置结束------------------------------------#
#------------------------------------入站配置-----------------------------------------#
# http(s) 代理端口
port: 7890

# socks4/4a/5 代理端口
socks-port: 7891

# 混合端口
# 混合端口是一个特殊的端口，它同时支持 HTTP(S) 和 SOCKS5 协议。您可以使用任何支持 HTTP 或 SOCKS 代理的程序连接到这个端口
mixed-port: 7892

# 透明代理端口
# redirect 端口仅限 Linux(Android) 以及 macOS 适用，tproxy 端口仅限 linux(Android) 适用

# redirect 透明代理端口，仅能代理 TCP 流量
redir-port: 7893

# tproxy 透明代理端口，可代理 TCP 与 UDP 流量
tproxy-port: 7894

#------------------------------------入站配置结束-------------------------------------#
